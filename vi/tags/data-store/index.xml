<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Data Store on Henry Techie</title><link>https://namanh11611.github.io/vi/tags/data-store/</link><description>Recent content in Data Store on Henry Techie</description><generator>Hugo -- gohugo.io</generator><language>vi</language><lastBuildDate>Sun, 14 May 2023 15:41:00 +0700</lastBuildDate><atom:link href="https://namanh11611.github.io/vi/tags/data-store/index.xml" rel="self" type="application/rss+xml"/><item><title>DataStore - mảnh ghép hoàn hảo cho bức tranh Kotlin Coroutines</title><link>https://namanh11611.github.io/vi/p/data-store/</link><pubDate>Sun, 14 May 2023 15:41:00 +0700</pubDate><guid>https://namanh11611.github.io/vi/p/data-store/</guid><description>&lt;img src="https://namanh11611.github.io/p/data-store/datastore.webp" alt="Featured image of post DataStore - mảnh ghép hoàn hảo cho bức tranh Kotlin Coroutines" />&lt;h1 id="concept">Concept
&lt;/h1>&lt;p>Trước hết, chúng ta cần hiểu &lt;strong>DataStore&lt;/strong> sinh ra với mục đích là gì.&lt;/p>
&lt;p>Hiện tại, trong ứng dụng Android, chúng ta có 5 cách để lưu trữ dữ liệu, trong đó &lt;strong>SharedPreferences&lt;/strong> là cách dùng để lưu những dữ liệu đơn giản nhất. Nó chỉ gồm &lt;strong>key&lt;/strong> và &lt;strong>value&lt;/strong>, trong đó value có thể là integer, string&amp;hellip;&lt;/p>
&lt;p>&lt;img src="https://namanh11611.github.io/p/data-store/storage.webp"
width="578"
height="353"
srcset="https://namanh11611.github.io/p/data-store/storage_hu_a158827593e08127.webp 480w, https://namanh11611.github.io/p/data-store/storage_hu_54f54dbe1f4bbb34.webp 1024w"
loading="lazy"
alt="Storage"
class="gallery-image"
data-flex-grow="163"
data-flex-basis="392px"
>&lt;/p>
&lt;p>Khi lần đầu mở app, nó sẽ đọc toàn bộ giá trị trong file xml của SharedPreferences và lưu vào RAM. Quá trình đọc file này lại diễn ra trên &lt;strong>UI Thread&lt;/strong>, nếu chúng ta có rất rất nhiều giá trị khiến cho thời gian thực hiện tác vụ vượt quá 5 giây, nó sẽ gây ra lỗi &lt;strong>ANR&lt;/strong> (Application Not Responding).&lt;/p>
&lt;p>Và &lt;strong>DataStore&lt;/strong> được tạo ra chính là để thay thế &lt;strong>SharedPreferences&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>DataStore là giải pháp lưu trữ dữ liệu theo dạng &lt;strong>cặp key-value&lt;/strong> hoặc &lt;strong>typed objects với protocol buffers&lt;/strong>.&lt;/p>&lt;/blockquote>
&lt;p>Tất nhiên, DataStore vẫn chỉ dành để lưu những dữ liệu có cấu trúc đơn giản. Nó sử dụng Coroutines và Flow để lưu data một cách bất đồng bộ và nhất quán.&lt;/p>
&lt;p>DataStore gồm 2 loại &lt;strong>Preferences DataStore&lt;/strong> và &lt;strong>Proto DataStore&lt;/strong>, chúng ta cùng nhìn qua bảng so sánh sau:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Preferences DataStore&lt;/th>
&lt;th>Proto DataStore&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Lưu và truy cập data bằng key&lt;/td>
&lt;td>Lưu instance của một loại custom data&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Không yêu cầu định nghĩa trước loại data&lt;/td>
&lt;td>Phải định nghĩa trước loại data bằng protocol buffers&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Không có type safety&lt;/td>
&lt;td>Có type safety&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="preferences-datastore">Preferences DataStore
&lt;/h1>&lt;h2 id="create">Create
&lt;/h2>&lt;p>Để sử dụng Preferences DataStore, chúng ta cần tạo một instance &lt;code>DataStore&amp;lt;Preferences&amp;gt;&lt;/code> bằng &lt;a class="link" href="../design-pattern-delegation" >property delegate&lt;/a> với keyword &lt;code>preferencesDataStore&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// At the top level of your kotlin file
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">val&lt;/span> &lt;span class="py">Context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">dataStore&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">DataStore&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Preferences&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">by&lt;/span> &lt;span class="n">preferencesDataStore&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;settings&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="read">Read
&lt;/h2>&lt;p>Trước hết, chúng ta có 7 function tương ứng với 7 loại data:&lt;/p>
&lt;ul>
&lt;li>&lt;code>intPreferencesKey()&lt;/code>&lt;/li>
&lt;li>&lt;code>longPreferencesKey()&lt;/code>&lt;/li>
&lt;li>&lt;code>doublePreferencesKey()&lt;/code>&lt;/li>
&lt;li>&lt;code>floatPreferencesKey()&lt;/code>&lt;/li>
&lt;li>&lt;code>booleanPreferencesKey()&lt;/code>&lt;/li>
&lt;li>&lt;code>stringPreferencesKey()&lt;/code>&lt;/li>
&lt;li>&lt;code>stringSetPreferencesKey()&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Khi đọc data, chúng ta cần dùng function tương ứng với giá trị mà chúng ta cần lưu. Ví dụ để lưu một biến &lt;code>counter&lt;/code> dạng số nguyên để đếm số lần user mở app, chúng ta có thể dùng cách sau:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">OPEN&lt;/span>&lt;span class="n">_APP_COUNTER&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">intPreferencesKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;open_app_counter&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">openAppCounterFlow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Flow&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Int&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">dataStore&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">map&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">preferences&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// No type safety.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">preferences&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">OPEN_APP_COUNTER&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">?:&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Điểm khác biệt với SharedPreferences chính là ở đây, data được trả về dưới dạng Flow. Giờ đây, các layer phía trên như Repository có thể observe data một cách thống nhất, không cần quan tâm nó đến từ DataStore, Room database hay Server, bởi vì tất cả đều được return dưới dạng Flow.&lt;/p>
&lt;h2 id="write">Write
&lt;/h2>&lt;p>Để ghi dữ liệu, chúng ta dùng function &lt;code>edit&lt;/code>, cũng khá giống với SharedPreferences.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">dataStore&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">edit&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">settings&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">val&lt;/span> &lt;span class="py">openAppCounterValue&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">settings&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">OPEN_APP_COUNTER&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">?:&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">settings&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">OPEN_APP_COUNTER&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">openAppCounterValue&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="proto-datastore">Proto DataStore
&lt;/h1>&lt;p>Trước khi tìm hiểu về Proto DataStore, chúng ta cần dạo qua một vòng về protocol buffers.&lt;/p>
&lt;h2 id="protocol-buffers">Protocol buffers
&lt;/h2>&lt;p>Đây là một một kiểu định dạng dữ liệu mà không phụ thuộc vào ngôn ngữ lập trình hay platform. Nó giống như JSON nhưng nhỏ và nhanh hơn nhiều lần. Protocol buffers cũng được giới thiệu là định dạng dữ liệu được sử dụng phổ biến nhất tại Google.&lt;/p>
&lt;ul>
&lt;li>Nó dùng để lưu các dữ liệu nhỏ gọn&lt;/li>
&lt;li>Phân tích cú pháp nhanh&lt;/li>
&lt;li>Hỗ trợ nhiều ngôn ngữ lập trình như C++, C#, Dart, Go, Java, Kotlin, Python&lt;/li>
&lt;li>Tối ưu hoá chức năng thông qua các class được generate tự động&lt;/li>
&lt;/ul>
&lt;p>Ví dụ một &lt;code>message&lt;/code> về thông tin user gồm tên, id và email:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">message&lt;/span> &lt;span class="nc">UserProfile&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="k">optional&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="k">optional&lt;/span> &lt;span class="kt">int32&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="k">optional&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Để so sánh về hiệu năng so của Protocol buffers so với JSON, chúng ta thử gọi 500 &lt;code>GET&lt;/code> requests từ một app Spring Boot này tới app Spring Boot khác với 2 môi trường có nén và không nén data. Và đây là kết quả:&lt;/p>
&lt;p>&lt;img src="https://namanh11611.github.io/p/data-store/protobuf.webp"
width="825"
height="433"
srcset="https://namanh11611.github.io/p/data-store/protobuf_hu_da10a27c57f37b67.webp 480w, https://namanh11611.github.io/p/data-store/protobuf_hu_c9259dcaf263e4e.webp 1024w"
loading="lazy"
alt="Protobuf"
class="gallery-image"
data-flex-grow="190"
data-flex-basis="457px"
>&lt;/p>
&lt;p>Chúng ta có thể thấy Protocol buffer &lt;strong>nhanh hơn từ 5 đến 6 lần&lt;/strong> so với JSON.&lt;/p>
&lt;h2 id="create-1">Create
&lt;/h2>&lt;p>Để sử dụng Proto DataStore, chúng ta phải định nghĩa loại data bằng một file proto &lt;code>settings.pb&lt;/code> trong folder &lt;code>app/src/main/proto/&lt;/code> như sau:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="n">syntax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;proto3&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">option&lt;/span> &lt;span class="n">java_package&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;com.example.application&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">option&lt;/span> &lt;span class="n">java_multiple_files&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="kd">message&lt;/span> &lt;span class="nc">Settings&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">int32&lt;/span> &lt;span class="n">open_app_counter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Sau đó, tiếp tục khai báo một object implement class &lt;code>Serializer&amp;lt;T&amp;gt;&lt;/code> với &lt;code>T&lt;/code> là kiểu dữ liệu đã được định nghĩa trong proto file.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">object&lt;/span> &lt;span class="nc">SettingsSerializer&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Serializer&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Settings&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">val&lt;/span> &lt;span class="py">defaultValue&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Settings&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nc">Settings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getDefaultInstance&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">suspend&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">readFrom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">InputStream&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Settings&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nc">Settings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">parseFrom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">exception&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">InvalidProtocolBufferException&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="n">CorruptionException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Cannot read proto.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">exception&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">override&lt;/span> &lt;span class="k">suspend&lt;/span> &lt;span class="k">fun&lt;/span> &lt;span class="nf">writeTo&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">t&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Settings&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">output&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">OutputStream&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">writeTo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Và cuối cùng là sử dụng &lt;a class="link" href="../design-pattern-delegation" >property delegate&lt;/a> với keyword &lt;code>dataStore&lt;/code> để tạo một instance của &lt;code>DataStore&amp;lt;T&amp;gt;&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">Context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">settingsDataStore&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">DataStore&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Settings&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="k">by&lt;/span> &lt;span class="n">dataStore&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fileName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;settings.pb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">serializer&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">SettingsSerializer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="read-1">Read
&lt;/h2>&lt;p>Tương tự như Preferences DataStore, chúng ta cũng dùng &lt;code>DataStore.data&lt;/code> để trả về một Flow.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">openAppCounterFlow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Flow&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Int&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">settingDataStore&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">map&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">settings&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// The openAppCounter is generated from the proto schema.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">settings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">openAppCounter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="write-1">Write
&lt;/h2>&lt;p>Để ghi data vào Proto DataStore, chúng ta có function &lt;code>updateData()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">settingsDataStore&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">updateData&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">currentSettings&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">currentSettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toBuilder&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">setExampleCounter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">currentSettings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">exampleCounter&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="so-sánh-với-sharedpreferences">So sánh với SharedPreferences
&lt;/h1>&lt;p>&lt;img src="https://namanh11611.github.io/p/data-store/comparison.webp"
width="825"
height="710"
srcset="https://namanh11611.github.io/p/data-store/comparison_hu_804d670ffba55dd0.webp 480w, https://namanh11611.github.io/p/data-store/comparison_hu_24870d7802d6d5f4.webp 1024w"
loading="lazy"
alt="Comparison"
class="gallery-image"
data-flex-grow="116"
data-flex-basis="278px"
>&lt;/p>
&lt;h2 id="migrate-from-sharedpreferences-to-preferences-datastore">Migrate from SharedPreferences to Preferences DataStore
&lt;/h2>&lt;p>Để migrate, chúng ta truyền &lt;code>SharedPreferencesMigration&lt;/code> vào param &lt;code>produceMigrations&lt;/code>. DataStore sẽ tự động migrate cho chúng ta.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">Context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">dataStore&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">DataStore&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Preferences&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="k">by&lt;/span> &lt;span class="n">preferencesDataStore&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">DATA_STORE_NAME&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">produceMigrations&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">listOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SharedPreferencesMigration&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SHARED_PREFERENCES_NAME&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="migrate-from-sharedpreferences-to-proto-datastore">Migrate from SharedPreferences to Proto DataStore
&lt;/h2>&lt;p>Trước tiên, chúng ta cần khai báo &lt;code>UserProfile&lt;/code> và &lt;code>UserProfileSerializer&lt;/code> tương tự như các bước ở trên. Sau đó viết một mapping function để migrate từ cặp key-value trong SharedPreferences sang loại dữ liệu trong Proto DataStore.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">Context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">dataStore&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">DataStore&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">UserProfile&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="k">by&lt;/span> &lt;span class="n">dataStore&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fileName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;settings.pb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">serializer&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">UserProfileSerializer&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">produceMigrations&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">listOf&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SharedPreferencesMigration&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;settings_pref&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">prefs&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">SharedPreferencesView&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">UserProfile&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">toBuilder&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">setName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prefs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NAME_KEY&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">setId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prefs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ID_KEY&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">setEmail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prefs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EMAIL_KEY&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="references">References
&lt;/h1>&lt;ul>
&lt;li>&lt;a class="link" href="https://developer.android.com/topic/libraries/architecture/datastore" target="_blank" rel="noopener"
>https://developer.android.com/topic/libraries/architecture/datastore&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://protobuf.dev/programming-guides/proto3" target="_blank" rel="noopener"
>https://protobuf.dev/programming-guides/proto3&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://android-developers.googleblog.com/2020/09/prefer-storing-data-with-jetpack.html" target="_blank" rel="noopener"
>https://android-developers.googleblog.com/2020/09/prefer-storing-data-with-jetpack.html&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://stackoverflow.com/questions/9986734/which-android-data-storage-technique-to-use" target="_blank" rel="noopener"
>https://stackoverflow.com/questions/9986734/which-android-data-storage-technique-to-use&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://auth0.com/blog/beating-json-performance-with-protobuf" target="_blank" rel="noopener"
>https://auth0.com/blog/beating-json-performance-with-protobuf&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://proandroiddev.com/is-jetpack-datastore-a-replacement-for-sharedpreferences-efe92d02fcb3" target="_blank" rel="noopener"
>https://proandroiddev.com/is-jetpack-datastore-a-replacement-for-sharedpreferences-efe92d02fcb3&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://kinya.hashnode.dev/migrating-sharedpreferences-to-datastore-ckxzlvda101by8rs1c8bg4wdx" target="_blank" rel="noopener"
>https://kinya.hashnode.dev/migrating-sharedpreferences-to-datastore-ckxzlvda101by8rs1c8bg4wdx&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://amitshekhar.me/blog/jetpack-datastore-preferences" target="_blank" rel="noopener"
>https://amitshekhar.me/blog/jetpack-datastore-preferences&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>